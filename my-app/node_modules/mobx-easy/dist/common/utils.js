"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const logPrefix = `[mobx-easy] -`;
exports.logPrefix = logPrefix;
const classFieldName = `mobx_easy_id`;
exports.classFieldName = classFieldName;
const getFirstWrapper = (wrapperItems) => {
    if (wrapperItems.size === 0) {
        throw new Error(`${logPrefix} no wrapped items!`);
    }
    const values = wrapperItems.values();
    return values.next();
};
exports.getFirstWrapper = getFirstWrapper;
const getWrapper = (wrapperItems, wrapperId) => {
    const wrapper = wrapperItems.get(wrapperId);
    if (!wrapper) {
        throw new Error(`${logPrefix} no wrapper items id: ${wrapperId}, wrapperItems size: ${wrapperItems.size}`);
    }
    return wrapper;
};
exports.getWrapper = getWrapper;
const generateId = () => {
    return '_' + Math.random().toString(36).substr(2, 9);
};
exports.generateId = generateId;
const assignIdsToClassesRecursive = ({ baseClass, id }) => {
    if (!baseClass) {
        return;
    }
    baseClass[classFieldName] = id;
    const fieldNames = Object.getOwnPropertyNames(baseClass);
    for (let field of fieldNames) {
        if (field === classFieldName) {
            return;
        }
        const currentField = baseClass[field];
        currentField[classFieldName] = id;
        if (currentField.constructor &&
            currentField.constructor.name !== 'Object' &&
            currentField.constructor.name !== 'Function') {
            assignIdsToClassesRecursive(currentField);
        }
    }
};
exports.assignIdsToClassesRecursive = assignIdsToClassesRecursive;
//# sourceMappingURL=utils.js.map