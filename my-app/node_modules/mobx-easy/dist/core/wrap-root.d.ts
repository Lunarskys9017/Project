import { WrapperItems } from "../common/types";
export interface IInit<T> {
    init: (initParams?: T) => void;
}
export interface WrapRootOptions<E, R, RCP, RIP> {
    rootStoreConstructorParams?: RCP;
    rootStoreInitParams?: RIP;
    RootStore: new (rootStoreParams?: RCP) => R;
    env: E;
    assignIdsToClasses?: boolean;
    wrapperName?: string;
}
declare const wrapRoot: (wrapperItems: WrapperItems) => <R extends IInit<RIP>, E, RCP, RIP>({ RootStore, env, wrapperName, assignIdsToClasses, rootStoreInitParams, rootStoreConstructorParams }: WrapRootOptions<E, R, RCP, RIP>) => R;
export { wrapRoot };
