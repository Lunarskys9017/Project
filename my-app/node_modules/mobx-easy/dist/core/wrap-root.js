"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../common/utils");
const wrapRoot = (wrapperItems) => {
    return ({ RootStore, env, wrapperName, assignIdsToClasses = false, rootStoreInitParams, rootStoreConstructorParams }) => {
        const id = utils_1.generateId();
        if (!env) {
            throw new Error(`${utils_1.logPrefix} no environment was passed!`);
        }
        let instance;
        try {
            instance = new RootStore(rootStoreConstructorParams);
        }
        catch (e) {
            instance = RootStore;
        }
        if (initFunctionDoesntExists(instance)) {
            throw new Error(`${utils_1.logPrefix} root store must have init function!`);
        }
        if (wrapperName && wrapperItems.get(wrapperName)) {
            throw new Error(`${utils_1.logPrefix} wrapper name already exists! please provide different name.`);
        }
        wrapperItems.set(wrapperName || id, {
            environmentData: env,
            root: instance
        });
        instance.init(rootStoreInitParams);
        if (assignIdsToClasses) {
            utils_1.assignIdsToClassesRecursive({
                baseClass: instance,
                id: wrapperName || id
            });
        }
        return instance;
    };
};
exports.wrapRoot = wrapRoot;
const initFunctionDoesntExists = (instance) => !instance.init || typeof instance.init !== "function";
//# sourceMappingURL=wrap-root.js.map