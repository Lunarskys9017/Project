import { Constructor, WrapperItems } from "../common/types";
declare const addEnvironment: (wrapperItems: WrapperItems) => <T extends Constructor<{}>>(BaseClass: T) => {
    new (...args: any[]): {
        getEnv(): any;
    };
} & T;
declare const addEnvironmentByName: (wrapperItems: WrapperItems) => (wrapperName: string) => <T extends Constructor<{}>>(BaseClass: T) => {
    new (...args: any[]): {
        getEnv(): any;
    };
} & T;
declare const getEnv: (wrapperItems: WrapperItems) => <T>(wrapperName?: string | undefined) => T;
export { getEnv, addEnvironment, addEnvironmentByName };
