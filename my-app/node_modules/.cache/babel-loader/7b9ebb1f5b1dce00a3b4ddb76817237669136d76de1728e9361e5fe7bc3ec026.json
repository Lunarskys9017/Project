{"ast":null,"code":"import{useEffect,useState}from\"react\";import{SUBSCRIPTION_ID}from\"../constants\";import{isDev,sleep}from\"lib/utils\";import{log}from\"lib/log\";async function openSubscribeWindow(){if(isDev){log(\"dev mode, not opening subscribe window\",\"src/features/monetization/hooks/useAdRemoval.ts\",\"openSubscribeWindow\");return;}const UID=await new Promise((resolve,reject)=>{overwolf.extensions.current.getManifest(manifest=>{if(manifest){resolve(manifest.UID);}else{reject(null);}});});overwolf.utils.openStore({page:\"SubscriptionPage\",uid:UID});}const useAdRemoval=()=>{const[isSubscribed,setIsSubscribed]=useState(false);const[isLoading,setIsLoading]=useState(true);// Function to handle the subscription change event\nconst handleSubscriptionState=()=>{setIsSubscribed(true);};useEffect(()=>{if(isDev){setIsSubscribed(false);setIsLoading(false);return;}// console.log('plan', subscriptionId)\n// Subscribe to the subscription change event\nconst handleSubscriptionChange=async info=>{setIsLoading(true);console.log(\"Subscription changed\",info);if(Array.isArray(info===null||info===void 0?void 0:info.plans)&&info.plans.includes(SUBSCRIPTION_ID)){handleSubscriptionState();}await sleep(3000);setIsLoading(false);};overwolf.profile.subscriptions.getActivePlans(async info=>{console.log(\"Active plans\",info);if(info.success&&Array.isArray(info===null||info===void 0?void 0:info.plans)&&info.plans.includes(SUBSCRIPTION_ID)){handleSubscriptionState();}await sleep(3000);setIsLoading(false);});overwolf.profile.subscriptions.onSubscriptionChanged.addListener(handleSubscriptionChange);// Unsubscribe from the event when the component unmounts\nreturn()=>{overwolf.profile.subscriptions.onSubscriptionChanged.removeListener(handleSubscriptionChange);};},[]);return{isSubscribed,isLoading};};export{useAdRemoval,openSubscribeWindow};","map":{"version":3,"names":["useEffect","useState","SUBSCRIPTION_ID","isDev","sleep","log","openSubscribeWindow","UID","Promise","resolve","reject","overwolf","extensions","current","getManifest","manifest","utils","openStore","page","uid","useAdRemoval","isSubscribed","setIsSubscribed","isLoading","setIsLoading","handleSubscriptionState","handleSubscriptionChange","info","console","Array","isArray","plans","includes","profile","subscriptions","getActivePlans","success","onSubscriptionChanged","addListener","removeListener"],"sources":["C:/Users/bryan/Desktop/Mob/Projects Backup/Projects/my-app/src/features/monetization/hooks/useAdRemoval.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SUBSCRIPTION_ID } from \"../constants\";\nimport { isDev, sleep } from \"lib/utils\";\nimport { log } from \"lib/log\";\n\nasync function openSubscribeWindow() {\n  if (isDev) {\n    log(\n      \"dev mode, not opening subscribe window\",\n      \"src/features/monetization/hooks/useAdRemoval.ts\",\n      \"openSubscribeWindow\"\n    );\n    return;\n  }\n  const UID = await new Promise<string>((resolve, reject) => {\n    overwolf.extensions.current.getManifest((manifest) => {\n      if (manifest) {\n        resolve(manifest.UID);\n      } else {\n        reject(null);\n      }\n    });\n  });\n  overwolf.utils.openStore({\n    page: \"SubscriptionPage\" as overwolf.utils.enums.eStorePage.SubscriptionPage,\n    uid: UID,\n  });\n}\n\nconst useAdRemoval = () => {\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  // Function to handle the subscription change event\n\n  const handleSubscriptionState = () => {\n    setIsSubscribed(true);\n  };\n\n  useEffect(() => {\n    if (isDev) {\n      setIsSubscribed(false);\n      setIsLoading(false);\n      return;\n    }\n    // console.log('plan', subscriptionId)\n    // Subscribe to the subscription change event\n    const handleSubscriptionChange = async (\n      info: overwolf.profile.subscriptions.SubscriptionChangedEvent\n    ) => {\n      setIsLoading(true);\n      console.log(\"Subscription changed\", info);\n      if (Array.isArray(info?.plans) && info.plans.includes(SUBSCRIPTION_ID)) {\n        handleSubscriptionState();\n      }\n      await sleep(3_000);\n      setIsLoading(false);\n    };\n\n    overwolf.profile.subscriptions.getActivePlans(async (info) => {\n      console.log(\"Active plans\", info);\n      if (\n        info.success &&\n        Array.isArray(info?.plans) &&\n        info.plans.includes(SUBSCRIPTION_ID)\n      ) {\n        handleSubscriptionState();\n      }\n      await sleep(3_000);\n      setIsLoading(false);\n    });\n    overwolf.profile.subscriptions.onSubscriptionChanged.addListener(\n      handleSubscriptionChange\n    );\n\n    // Unsubscribe from the event when the component unmounts\n    return () => {\n      overwolf.profile.subscriptions.onSubscriptionChanged.removeListener(\n        handleSubscriptionChange\n      );\n    };\n  }, []);\n\n  return { isSubscribed, isLoading };\n};\n\nexport { useAdRemoval, openSubscribeWindow };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}