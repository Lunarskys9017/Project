{"ast":null,"code":"const ConsumableStream = require('consumable-stream');\nclass AGChannel extends ConsumableStream {\n  constructor(name, client, eventDemux, dataDemux) {\n    super();\n    this.PENDING = AGChannel.PENDING;\n    this.SUBSCRIBED = AGChannel.SUBSCRIBED;\n    this.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\n    this.name = name;\n    this.client = client;\n    this._eventDemux = eventDemux;\n    this._dataStream = dataDemux.stream(this.name);\n  }\n  createConsumer(timeout) {\n    return this._dataStream.createConsumer(timeout);\n  }\n  listener(eventName) {\n    return this._eventDemux.stream(`${this.name}/${eventName}`);\n  }\n  close() {\n    this.client.closeChannel(this.name);\n  }\n  kill() {\n    this.client.killChannel(this.name);\n  }\n  killOutputConsumer(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      this.client.killChannelOutputConsumer(consumerId);\n    }\n  }\n  killListenerConsumer(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      this.client.killChannelListenerConsumer(consumerId);\n    }\n  }\n  getOutputConsumerStats(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n  getListenerConsumerStats(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n  getBackpressure() {\n    return this.client.getChannelBackpressure(this.name);\n  }\n  getListenerConsumerBackpressure(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n  getOutputConsumerBackpressure(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n  closeOutput() {\n    this.client.channelCloseOutput(this.name);\n  }\n  closeListener(eventName) {\n    this.client.channelCloseListener(this.name, eventName);\n  }\n  closeAllListeners() {\n    this.client.channelCloseAllListeners(this.name);\n  }\n  killOutput() {\n    this.client.channelKillOutput(this.name);\n  }\n  killListener(eventName) {\n    this.client.channelKillListener(this.name, eventName);\n  }\n  killAllListeners() {\n    this.client.channelKillAllListeners(this.name);\n  }\n  getOutputConsumerStatsList() {\n    return this.client.channelGetOutputConsumerStatsList(this.name);\n  }\n  getListenerConsumerStatsList(eventName) {\n    return this.client.channelGetListenerConsumerStatsList(this.name, eventName);\n  }\n  getAllListenersConsumerStatsList() {\n    return this.client.channelGetAllListenersConsumerStatsList(this.name);\n  }\n  getOutputBackpressure() {\n    return this.client.channelGetOutputBackpressure(this.name);\n  }\n  getListenerBackpressure(eventName) {\n    return this.client.channelGetListenerBackpressure(this.name, eventName);\n  }\n  getAllListenersBackpressure() {\n    return this.client.channelGetAllListenersBackpressure(this.name);\n  }\n  hasOutputConsumer(consumerId) {\n    return this.client.channelHasOutputConsumer(this.name, consumerId);\n  }\n  hasListenerConsumer(eventName, consumerId) {\n    return this.client.channelHasListenerConsumer(this.name, eventName, consumerId);\n  }\n  hasAnyListenerConsumer(consumerId) {\n    return this.client.channelHasAnyListenerConsumer(this.name, consumerId);\n  }\n  get state() {\n    return this.client.getChannelState(this.name);\n  }\n  set state(value) {\n    throw new Error('Cannot directly set channel state');\n  }\n  get options() {\n    return this.client.getChannelOptions(this.name);\n  }\n  set options(value) {\n    throw new Error('Cannot directly set channel options');\n  }\n  subscribe(options) {\n    this.client.subscribe(this.name, options);\n  }\n  unsubscribe() {\n    this.client.unsubscribe(this.name);\n  }\n  isSubscribed(includePending) {\n    return this.client.isSubscribed(this.name, includePending);\n  }\n  transmitPublish(data) {\n    return this.client.transmitPublish(this.name, data);\n  }\n  invokePublish(data) {\n    return this.client.invokePublish(this.name, data);\n  }\n}\nAGChannel.PENDING = 'pending';\nAGChannel.SUBSCRIBED = 'subscribed';\nAGChannel.UNSUBSCRIBED = 'unsubscribed';\nmodule.exports = AGChannel;","map":{"version":3,"names":["ConsumableStream","require","AGChannel","constructor","name","client","eventDemux","dataDemux","PENDING","SUBSCRIBED","UNSUBSCRIBED","_eventDemux","_dataStream","stream","createConsumer","timeout","listener","eventName","close","closeChannel","kill","killChannel","killOutputConsumer","consumerId","hasOutputConsumer","killChannelOutputConsumer","killListenerConsumer","hasAnyListenerConsumer","killChannelListenerConsumer","getOutputConsumerStats","getChannelOutputConsumerStats","undefined","getListenerConsumerStats","getChannelListenerConsumerStats","getBackpressure","getChannelBackpressure","getListenerConsumerBackpressure","getChannelListenerConsumerBackpressure","getOutputConsumerBackpressure","getChannelOutputConsumerBackpressure","closeOutput","channelCloseOutput","closeListener","channelCloseListener","closeAllListeners","channelCloseAllListeners","killOutput","channelKillOutput","killListener","channelKillListener","killAllListeners","channelKillAllListeners","getOutputConsumerStatsList","channelGetOutputConsumerStatsList","getListenerConsumerStatsList","channelGetListenerConsumerStatsList","getAllListenersConsumerStatsList","channelGetAllListenersConsumerStatsList","getOutputBackpressure","channelGetOutputBackpressure","getListenerBackpressure","channelGetListenerBackpressure","getAllListenersBackpressure","channelGetAllListenersBackpressure","channelHasOutputConsumer","hasListenerConsumer","channelHasListenerConsumer","channelHasAnyListenerConsumer","state","getChannelState","value","Error","options","getChannelOptions","subscribe","unsubscribe","isSubscribed","includePending","transmitPublish","data","invokePublish","module","exports"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/node_modules/ag-channel/index.js"],"sourcesContent":["const ConsumableStream = require('consumable-stream');\n\nclass AGChannel extends ConsumableStream {\n  constructor(name, client, eventDemux, dataDemux) {\n    super();\n    this.PENDING = AGChannel.PENDING;\n    this.SUBSCRIBED = AGChannel.SUBSCRIBED;\n    this.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\n\n    this.name = name;\n    this.client = client;\n\n    this._eventDemux = eventDemux;\n    this._dataStream = dataDemux.stream(this.name);\n  }\n\n  createConsumer(timeout) {\n    return this._dataStream.createConsumer(timeout);\n  }\n\n  listener(eventName) {\n    return this._eventDemux.stream(`${this.name}/${eventName}`);\n  }\n\n  close() {\n    this.client.closeChannel(this.name);\n  }\n\n  kill() {\n    this.client.killChannel(this.name);\n  }\n\n  killOutputConsumer(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      this.client.killChannelOutputConsumer(consumerId);\n    }\n  }\n\n  killListenerConsumer(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      this.client.killChannelListenerConsumer(consumerId);\n    }\n  }\n\n  getOutputConsumerStats(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getListenerConsumerStats(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getBackpressure() {\n    return this.client.getChannelBackpressure(this.name);\n  }\n\n  getListenerConsumerBackpressure(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  getOutputConsumerBackpressure(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  closeOutput() {\n    this.client.channelCloseOutput(this.name);\n  }\n\n  closeListener(eventName) {\n    this.client.channelCloseListener(this.name, eventName);\n  }\n\n  closeAllListeners() {\n    this.client.channelCloseAllListeners(this.name);\n  }\n\n  killOutput() {\n    this.client.channelKillOutput(this.name);\n  }\n\n  killListener(eventName) {\n    this.client.channelKillListener(this.name, eventName);\n  }\n\n  killAllListeners() {\n    this.client.channelKillAllListeners(this.name);\n  }\n\n  getOutputConsumerStatsList() {\n    return this.client.channelGetOutputConsumerStatsList(this.name);\n  }\n\n  getListenerConsumerStatsList(eventName) {\n    return this.client.channelGetListenerConsumerStatsList(this.name, eventName);\n  }\n\n  getAllListenersConsumerStatsList() {\n    return this.client.channelGetAllListenersConsumerStatsList(this.name);\n  }\n\n  getOutputBackpressure() {\n    return this.client.channelGetOutputBackpressure(this.name);\n  }\n\n  getListenerBackpressure(eventName) {\n    return this.client.channelGetListenerBackpressure(this.name, eventName);\n  }\n\n  getAllListenersBackpressure() {\n    return this.client.channelGetAllListenersBackpressure(this.name);\n  }\n\n  hasOutputConsumer(consumerId) {\n    return this.client.channelHasOutputConsumer(this.name, consumerId);\n  }\n\n  hasListenerConsumer(eventName, consumerId) {\n    return this.client.channelHasListenerConsumer(this.name, eventName, consumerId);\n  }\n\n  hasAnyListenerConsumer(consumerId) {\n    return this.client.channelHasAnyListenerConsumer(this.name, consumerId);\n  }\n\n  get state() {\n    return this.client.getChannelState(this.name);\n  }\n\n  set state(value) {\n    throw new Error('Cannot directly set channel state');\n  }\n\n  get options() {\n    return this.client.getChannelOptions(this.name);\n  }\n\n  set options(value) {\n    throw new Error('Cannot directly set channel options');\n  }\n\n  subscribe(options) {\n    this.client.subscribe(this.name, options);\n  }\n\n  unsubscribe() {\n    this.client.unsubscribe(this.name);\n  }\n\n  isSubscribed(includePending) {\n    return this.client.isSubscribed(this.name, includePending);\n  }\n\n  transmitPublish(data) {\n    return this.client.transmitPublish(this.name, data);\n  }\n\n  invokePublish(data) {\n    return this.client.invokePublish(this.name, data);\n  }\n}\n\nAGChannel.PENDING = 'pending';\nAGChannel.SUBSCRIBED = 'subscribed';\nAGChannel.UNSUBSCRIBED = 'unsubscribed';\n\nmodule.exports = AGChannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}