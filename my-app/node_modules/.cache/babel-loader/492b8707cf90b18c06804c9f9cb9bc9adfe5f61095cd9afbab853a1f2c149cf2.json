{"ast":null,"code":"const ConsumableStream = require('consumable-stream');\nclass AGChannel extends ConsumableStream {\n  constructor(name, client, eventDemux, dataDemux) {\n    super();\n    this.PENDING = AGChannel.PENDING;\n    this.SUBSCRIBED = AGChannel.SUBSCRIBED;\n    this.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\n    this.name = name;\n    this.client = client;\n    this._eventDemux = eventDemux;\n    this._dataStream = dataDemux.stream(this.name);\n  }\n  createConsumer(timeout) {\n    return this._dataStream.createConsumer(timeout);\n  }\n  listener(eventName) {\n    return this._eventDemux.stream(\"\".concat(this.name, \"/\").concat(eventName));\n  }\n  close() {\n    this.client.closeChannel(this.name);\n  }\n  kill() {\n    this.client.killChannel(this.name);\n  }\n  killOutputConsumer(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      this.client.killChannelOutputConsumer(consumerId);\n    }\n  }\n  killListenerConsumer(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      this.client.killChannelListenerConsumer(consumerId);\n    }\n  }\n  getOutputConsumerStats(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n  getListenerConsumerStats(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n  getBackpressure() {\n    return this.client.getChannelBackpressure(this.name);\n  }\n  getListenerConsumerBackpressure(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n  getOutputConsumerBackpressure(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n  closeOutput() {\n    this.client.channelCloseOutput(this.name);\n  }\n  closeListener(eventName) {\n    this.client.channelCloseListener(this.name, eventName);\n  }\n  closeAllListeners() {\n    this.client.channelCloseAllListeners(this.name);\n  }\n  killOutput() {\n    this.client.channelKillOutput(this.name);\n  }\n  killListener(eventName) {\n    this.client.channelKillListener(this.name, eventName);\n  }\n  killAllListeners() {\n    this.client.channelKillAllListeners(this.name);\n  }\n  getOutputConsumerStatsList() {\n    return this.client.channelGetOutputConsumerStatsList(this.name);\n  }\n  getListenerConsumerStatsList(eventName) {\n    return this.client.channelGetListenerConsumerStatsList(this.name, eventName);\n  }\n  getAllListenersConsumerStatsList() {\n    return this.client.channelGetAllListenersConsumerStatsList(this.name);\n  }\n  getOutputBackpressure() {\n    return this.client.channelGetOutputBackpressure(this.name);\n  }\n  getListenerBackpressure(eventName) {\n    return this.client.channelGetListenerBackpressure(this.name, eventName);\n  }\n  getAllListenersBackpressure() {\n    return this.client.channelGetAllListenersBackpressure(this.name);\n  }\n  hasOutputConsumer(consumerId) {\n    return this.client.channelHasOutputConsumer(this.name, consumerId);\n  }\n  hasListenerConsumer(eventName, consumerId) {\n    return this.client.channelHasListenerConsumer(this.name, eventName, consumerId);\n  }\n  hasAnyListenerConsumer(consumerId) {\n    return this.client.channelHasAnyListenerConsumer(this.name, consumerId);\n  }\n  get state() {\n    return this.client.getChannelState(this.name);\n  }\n  set state(value) {\n    throw new Error('Cannot directly set channel state');\n  }\n  get options() {\n    return this.client.getChannelOptions(this.name);\n  }\n  set options(value) {\n    throw new Error('Cannot directly set channel options');\n  }\n  subscribe(options) {\n    this.client.subscribe(this.name, options);\n  }\n  unsubscribe() {\n    this.client.unsubscribe(this.name);\n  }\n  isSubscribed(includePending) {\n    return this.client.isSubscribed(this.name, includePending);\n  }\n  transmitPublish(data) {\n    return this.client.transmitPublish(this.name, data);\n  }\n  invokePublish(data) {\n    return this.client.invokePublish(this.name, data);\n  }\n}\nAGChannel.PENDING = 'pending';\nAGChannel.SUBSCRIBED = 'subscribed';\nAGChannel.UNSUBSCRIBED = 'unsubscribed';\nmodule.exports = AGChannel;","map":{"version":3,"names":["ConsumableStream","require","AGChannel","constructor","name","client","eventDemux","dataDemux","PENDING","SUBSCRIBED","UNSUBSCRIBED","_eventDemux","_dataStream","stream","createConsumer","timeout","listener","eventName","concat","close","closeChannel","kill","killChannel","killOutputConsumer","consumerId","hasOutputConsumer","killChannelOutputConsumer","killListenerConsumer","hasAnyListenerConsumer","killChannelListenerConsumer","getOutputConsumerStats","getChannelOutputConsumerStats","undefined","getListenerConsumerStats","getChannelListenerConsumerStats","getBackpressure","getChannelBackpressure","getListenerConsumerBackpressure","getChannelListenerConsumerBackpressure","getOutputConsumerBackpressure","getChannelOutputConsumerBackpressure","closeOutput","channelCloseOutput","closeListener","channelCloseListener","closeAllListeners","channelCloseAllListeners","killOutput","channelKillOutput","killListener","channelKillListener","killAllListeners","channelKillAllListeners","getOutputConsumerStatsList","channelGetOutputConsumerStatsList","getListenerConsumerStatsList","channelGetListenerConsumerStatsList","getAllListenersConsumerStatsList","channelGetAllListenersConsumerStatsList","getOutputBackpressure","channelGetOutputBackpressure","getListenerBackpressure","channelGetListenerBackpressure","getAllListenersBackpressure","channelGetAllListenersBackpressure","channelHasOutputConsumer","hasListenerConsumer","channelHasListenerConsumer","channelHasAnyListenerConsumer","state","getChannelState","value","Error","options","getChannelOptions","subscribe","unsubscribe","isSubscribed","includePending","transmitPublish","data","invokePublish","module","exports"],"sources":["C:/Users/bryan/Desktop/Mob/Projects Backup/Projects/my-app/node_modules/ag-channel/index.js"],"sourcesContent":["const ConsumableStream = require('consumable-stream');\n\nclass AGChannel extends ConsumableStream {\n  constructor(name, client, eventDemux, dataDemux) {\n    super();\n    this.PENDING = AGChannel.PENDING;\n    this.SUBSCRIBED = AGChannel.SUBSCRIBED;\n    this.UNSUBSCRIBED = AGChannel.UNSUBSCRIBED;\n\n    this.name = name;\n    this.client = client;\n\n    this._eventDemux = eventDemux;\n    this._dataStream = dataDemux.stream(this.name);\n  }\n\n  createConsumer(timeout) {\n    return this._dataStream.createConsumer(timeout);\n  }\n\n  listener(eventName) {\n    return this._eventDemux.stream(`${this.name}/${eventName}`);\n  }\n\n  close() {\n    this.client.closeChannel(this.name);\n  }\n\n  kill() {\n    this.client.killChannel(this.name);\n  }\n\n  killOutputConsumer(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      this.client.killChannelOutputConsumer(consumerId);\n    }\n  }\n\n  killListenerConsumer(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      this.client.killChannelListenerConsumer(consumerId);\n    }\n  }\n\n  getOutputConsumerStats(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getListenerConsumerStats(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerStats(consumerId);\n    }\n    return undefined;\n  }\n\n  getBackpressure() {\n    return this.client.getChannelBackpressure(this.name);\n  }\n\n  getListenerConsumerBackpressure(consumerId) {\n    if (this.hasAnyListenerConsumer(consumerId)) {\n      return this.client.getChannelListenerConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  getOutputConsumerBackpressure(consumerId) {\n    if (this.hasOutputConsumer(consumerId)) {\n      return this.client.getChannelOutputConsumerBackpressure(consumerId);\n    }\n    return 0;\n  }\n\n  closeOutput() {\n    this.client.channelCloseOutput(this.name);\n  }\n\n  closeListener(eventName) {\n    this.client.channelCloseListener(this.name, eventName);\n  }\n\n  closeAllListeners() {\n    this.client.channelCloseAllListeners(this.name);\n  }\n\n  killOutput() {\n    this.client.channelKillOutput(this.name);\n  }\n\n  killListener(eventName) {\n    this.client.channelKillListener(this.name, eventName);\n  }\n\n  killAllListeners() {\n    this.client.channelKillAllListeners(this.name);\n  }\n\n  getOutputConsumerStatsList() {\n    return this.client.channelGetOutputConsumerStatsList(this.name);\n  }\n\n  getListenerConsumerStatsList(eventName) {\n    return this.client.channelGetListenerConsumerStatsList(this.name, eventName);\n  }\n\n  getAllListenersConsumerStatsList() {\n    return this.client.channelGetAllListenersConsumerStatsList(this.name);\n  }\n\n  getOutputBackpressure() {\n    return this.client.channelGetOutputBackpressure(this.name);\n  }\n\n  getListenerBackpressure(eventName) {\n    return this.client.channelGetListenerBackpressure(this.name, eventName);\n  }\n\n  getAllListenersBackpressure() {\n    return this.client.channelGetAllListenersBackpressure(this.name);\n  }\n\n  hasOutputConsumer(consumerId) {\n    return this.client.channelHasOutputConsumer(this.name, consumerId);\n  }\n\n  hasListenerConsumer(eventName, consumerId) {\n    return this.client.channelHasListenerConsumer(this.name, eventName, consumerId);\n  }\n\n  hasAnyListenerConsumer(consumerId) {\n    return this.client.channelHasAnyListenerConsumer(this.name, consumerId);\n  }\n\n  get state() {\n    return this.client.getChannelState(this.name);\n  }\n\n  set state(value) {\n    throw new Error('Cannot directly set channel state');\n  }\n\n  get options() {\n    return this.client.getChannelOptions(this.name);\n  }\n\n  set options(value) {\n    throw new Error('Cannot directly set channel options');\n  }\n\n  subscribe(options) {\n    this.client.subscribe(this.name, options);\n  }\n\n  unsubscribe() {\n    this.client.unsubscribe(this.name);\n  }\n\n  isSubscribed(includePending) {\n    return this.client.isSubscribed(this.name, includePending);\n  }\n\n  transmitPublish(data) {\n    return this.client.transmitPublish(this.name, data);\n  }\n\n  invokePublish(data) {\n    return this.client.invokePublish(this.name, data);\n  }\n}\n\nAGChannel.PENDING = 'pending';\nAGChannel.SUBSCRIBED = 'subscribed';\nAGChannel.UNSUBSCRIBED = 'unsubscribed';\n\nmodule.exports = AGChannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}