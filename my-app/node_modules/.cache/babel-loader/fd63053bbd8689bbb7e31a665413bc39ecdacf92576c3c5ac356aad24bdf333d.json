{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Desktop\\\\Projects\\\\my-app\\\\src\\\\app\\\\components\\\\CurrentScreen.tsx\";\nimport { lazy, memo } from \"react\";\nimport { WINDOW_NAMES } from \"../shared/constants\";\n\n//window name in manifest file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  BACKGROUND,\n  DESKTOP,\n  INGAME\n} = WINDOW_NAMES;\n\n//lazy load window components, so that they are not loaded until they are needed\n//this is done to reduce the amount of time spent loading\nconst BackgroundScreen = /*#__PURE__*/lazy(_c = () => import(\"screens/background\"));\n_c2 = BackgroundScreen;\nconst DesktopScreen = /*#__PURE__*/lazy(_c3 = () => import(\"screens/desktop\"));\n_c4 = DesktopScreen;\nconst InGameScreen = /*#__PURE__*/lazy(_c5 = () => import(\"screens/ingame\"));\n_c6 = InGameScreen;\n//return the current page based on the window name, the current window name is passed in as a prop\n//this is used to determine which page to render\nexport const CurrentScreen = /*#__PURE__*/memo(_c7 = _ref => {\n  let {\n    name\n  } = _ref;\n  switch (name) {\n    case BACKGROUND:\n      return /*#__PURE__*/_jsxDEV(BackgroundScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    case DESKTOP:\n      return /*#__PURE__*/_jsxDEV(DesktopScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    case INGAME:\n      return /*#__PURE__*/_jsxDEV(InGameScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    default:\n      return null;\n  }\n});\n_c8 = CurrentScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"BackgroundScreen$lazy\");\n$RefreshReg$(_c2, \"BackgroundScreen\");\n$RefreshReg$(_c3, \"DesktopScreen$lazy\");\n$RefreshReg$(_c4, \"DesktopScreen\");\n$RefreshReg$(_c5, \"InGameScreen$lazy\");\n$RefreshReg$(_c6, \"InGameScreen\");\n$RefreshReg$(_c7, \"CurrentScreen$memo\");\n$RefreshReg$(_c8, \"CurrentScreen\");","map":{"version":3,"names":["lazy","memo","WINDOW_NAMES","jsxDEV","_jsxDEV","BACKGROUND","DESKTOP","INGAME","BackgroundScreen","_c","_c2","DesktopScreen","_c3","_c4","InGameScreen","_c5","_c6","CurrentScreen","_c7","_ref","name","fileName","_jsxFileName","lineNumber","columnNumber","_c8","$RefreshReg$"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/src/app/components/CurrentScreen.tsx"],"sourcesContent":["import { lazy, memo } from \"react\";\nimport { WINDOW_NAMES } from \"../shared/constants\";\n\n//window name in manifest file\nconst { BACKGROUND, DESKTOP, INGAME } = WINDOW_NAMES;\n\n//lazy load window components, so that they are not loaded until they are needed\n//this is done to reduce the amount of time spent loading\nconst BackgroundScreen = lazy(() => import(\"screens/background\"));\nconst DesktopScreen = lazy(() => import(\"screens/desktop\"));\nconst InGameScreen = lazy(() => import(\"screens/ingame\"));\n\ntype CurrentScreenProps = {\n  name: string;\n};\n//return the current page based on the window name, the current window name is passed in as a prop\n//this is used to determine which page to render\nexport const CurrentScreen = memo(({ name }: CurrentScreenProps) => {\n  switch (name) {\n    case BACKGROUND:\n      return <BackgroundScreen />;\n    case DESKTOP:\n      return <DesktopScreen />;\n    case INGAME:\n      return <InGameScreen />;\n    default:\n      return null;\n  }\n});\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,qBAAqB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAO,CAAC,GAAGL,YAAY;;AAEpD;AACA;AACA,MAAMM,gBAAgB,gBAAGR,IAAI,CAAAS,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAACC,GAAA,GAA5DF,gBAAgB;AACtB,MAAMG,aAAa,gBAAGX,IAAI,CAAAY,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAACC,GAAA,GAAtDF,aAAa;AACnB,MAAMG,YAAY,gBAAGd,IAAI,CAAAe,GAAA,GAACA,CAAA,KAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAACC,GAAA,GAApDF,YAAY;AAKlB;AACA;AACA,OAAO,MAAMG,aAAa,gBAAGhB,IAAI,CAAAiB,GAAA,GAACC,IAAA,IAAkC;EAAA,IAAjC;IAAEC;EAAyB,CAAC,GAAAD,IAAA;EAC7D,QAAQC,IAAI;IACV,KAAKf,UAAU;MACb,oBAAOD,OAAA,CAACI,gBAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC7B,KAAKlB,OAAO;MACV,oBAAOF,OAAA,CAACO,aAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC1B,KAAKjB,MAAM;MACT,oBAAOH,OAAA,CAACU,YAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzB;MACE,OAAO,IAAI;EACf;AACF,CAAC,CAAC;AAACC,GAAA,GAXUR,aAAa;AAAA,IAAAR,EAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}