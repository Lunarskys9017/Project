{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import{devToolsEnhancer}from\"@redux-devtools/remote\";import reducer from\"./rootReducer\";import{isDev}from\"lib/utils\";const reduxStore=configureStore({reducer,devTools:false,enhancers:getDefaultEnchancers=>getDefaultEnchancers().concat(devToolsEnhancer({port:8081}))});window.reduxStore=reduxStore;const{reduxStore:store}=isDev?{reduxStore}:overwolf.windows.getMainWindow();export default store;","map":{"version":3,"names":["configureStore","devToolsEnhancer","reducer","isDev","reduxStore","devTools","enhancers","getDefaultEnchancers","concat","port","window","store","overwolf","windows","getMainWindow"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/src/app/shared/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { devToolsEnhancer } from \"@redux-devtools/remote\";\nimport reducer from \"./rootReducer\";\nimport { isDev } from \"lib/utils\";\n\nconst reduxStore = configureStore({\n  reducer,\n  devTools: false,\n  enhancers: (getDefaultEnchancers) =>\n    getDefaultEnchancers().concat(devToolsEnhancer({ port: 8081 })),\n});\n\ndeclare global {\n  interface Window {\n    reduxStore: typeof reduxStore;\n  }\n}\n\nwindow.reduxStore = reduxStore;\n\nconst { reduxStore: store } = isDev\n  ? { reduxStore }\n  : overwolf.windows.getMainWindow();\n\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,gBAAgB,KAAQ,wBAAwB,CACzD,MAAO,CAAAC,OAAO,KAAM,eAAe,CACnC,OAASC,KAAK,KAAQ,WAAW,CAEjC,KAAM,CAAAC,UAAU,CAAGJ,cAAc,CAAC,CAChCE,OAAO,CACPG,QAAQ,CAAE,KAAK,CACfC,SAAS,CAAGC,oBAAoB,EAC9BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,gBAAgB,CAAC,CAAEQ,IAAI,CAAE,IAAK,CAAC,CAAC,CAClE,CAAC,CAAC,CAQFC,MAAM,CAACN,UAAU,CAAGA,UAAU,CAE9B,KAAM,CAAEA,UAAU,CAAEO,KAAM,CAAC,CAAGR,KAAK,CAC/B,CAAEC,UAAW,CAAC,CACdQ,QAAQ,CAACC,OAAO,CAACC,aAAa,CAAC,CAAC,CAGpC,cAAe,CAAAH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}