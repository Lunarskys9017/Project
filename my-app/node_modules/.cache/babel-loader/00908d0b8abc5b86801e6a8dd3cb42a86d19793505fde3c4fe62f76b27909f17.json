{"ast":null,"code":"const ConsumableStream = require('consumable-stream');\nconst Consumer = require('./consumer');\nclass WritableConsumableStream extends ConsumableStream {\n  constructor(options) {\n    super();\n    options = options || {};\n    this._nextConsumerId = 1;\n    this.generateConsumerId = options.generateConsumerId;\n    if (!this.generateConsumerId) {\n      this.generateConsumerId = () => this._nextConsumerId++;\n    }\n    this.removeConsumerCallback = options.removeConsumerCallback;\n    this._consumers = new Map();\n\n    // Tail node of a singly linked list.\n    this.tailNode = {\n      next: null,\n      data: {\n        value: undefined,\n        done: false\n      }\n    };\n  }\n  _write(value, done, consumerId) {\n    let dataNode = {\n      data: {\n        value,\n        done\n      },\n      next: null\n    };\n    if (consumerId) {\n      dataNode.consumerId = consumerId;\n    }\n    this.tailNode.next = dataNode;\n    this.tailNode = dataNode;\n    for (let consumer of this._consumers.values()) {\n      consumer.write(dataNode.data);\n    }\n  }\n  write(value) {\n    this._write(value, false);\n  }\n  close(value) {\n    this._write(value, true);\n  }\n  writeToConsumer(consumerId, value) {\n    this._write(value, false, consumerId);\n  }\n  closeConsumer(consumerId, value) {\n    this._write(value, true, consumerId);\n  }\n  kill(value) {\n    for (let consumerId of this._consumers.keys()) {\n      this.killConsumer(consumerId, value);\n    }\n  }\n  killConsumer(consumerId, value) {\n    let consumer = this._consumers.get(consumerId);\n    if (!consumer) {\n      return;\n    }\n    consumer.kill(value);\n  }\n  getBackpressure() {\n    let maxBackpressure = 0;\n    for (let consumer of this._consumers.values()) {\n      let backpressure = consumer.getBackpressure();\n      if (backpressure > maxBackpressure) {\n        maxBackpressure = backpressure;\n      }\n    }\n    return maxBackpressure;\n  }\n  getConsumerBackpressure(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getBackpressure();\n    }\n    return 0;\n  }\n  hasConsumer(consumerId) {\n    return this._consumers.has(consumerId);\n  }\n  setConsumer(consumerId, consumer) {\n    this._consumers.set(consumerId, consumer);\n    if (!consumer.currentNode) {\n      consumer.currentNode = this.tailNode;\n    }\n  }\n  removeConsumer(consumerId) {\n    let result = this._consumers.delete(consumerId);\n    if (this.removeConsumerCallback) this.removeConsumerCallback(consumerId);\n    return result;\n  }\n  getConsumerStats(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getStats();\n    }\n    return undefined;\n  }\n  getConsumerStatsList() {\n    let consumerStats = [];\n    for (let consumer of this._consumers.values()) {\n      consumerStats.push(consumer.getStats());\n    }\n    return consumerStats;\n  }\n  createConsumer(timeout) {\n    return new Consumer(this, this.generateConsumerId(), this.tailNode, timeout);\n  }\n  getConsumerList() {\n    return [...this._consumers.values()];\n  }\n  getConsumerCount() {\n    return this._consumers.size;\n  }\n}\nmodule.exports = WritableConsumableStream;","map":{"version":3,"names":["ConsumableStream","require","Consumer","WritableConsumableStream","constructor","options","_nextConsumerId","generateConsumerId","removeConsumerCallback","_consumers","Map","tailNode","next","data","value","undefined","done","_write","consumerId","dataNode","consumer","values","write","close","writeToConsumer","closeConsumer","kill","keys","killConsumer","get","getBackpressure","maxBackpressure","backpressure","getConsumerBackpressure","hasConsumer","has","setConsumer","set","currentNode","removeConsumer","result","delete","getConsumerStats","getStats","getConsumerStatsList","consumerStats","push","createConsumer","timeout","getConsumerList","getConsumerCount","size","module","exports"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/node_modules/writable-consumable-stream/index.js"],"sourcesContent":["const ConsumableStream = require('consumable-stream');\nconst Consumer = require('./consumer');\n\nclass WritableConsumableStream extends ConsumableStream {\n  constructor(options) {\n    super();\n    options = options || {};\n    this._nextConsumerId = 1;\n    this.generateConsumerId = options.generateConsumerId;\n    if (!this.generateConsumerId) {\n      this.generateConsumerId = () => this._nextConsumerId++;\n    }\n    this.removeConsumerCallback = options.removeConsumerCallback;\n    this._consumers = new Map();\n\n    // Tail node of a singly linked list.\n    this.tailNode = {\n      next: null,\n      data: {\n        value: undefined,\n        done: false\n      }\n    };\n  }\n\n  _write(value, done, consumerId) {\n    let dataNode = {\n      data: {value, done},\n      next: null\n    };\n    if (consumerId) {\n      dataNode.consumerId = consumerId;\n    }\n    this.tailNode.next = dataNode;\n    this.tailNode = dataNode;\n\n    for (let consumer of this._consumers.values()) {\n      consumer.write(dataNode.data);\n    }\n  }\n\n  write(value) {\n    this._write(value, false);\n  }\n\n  close(value) {\n    this._write(value, true);\n  }\n\n  writeToConsumer(consumerId, value) {\n    this._write(value, false, consumerId);\n  }\n\n  closeConsumer(consumerId, value) {\n    this._write(value, true, consumerId);\n  }\n\n  kill(value) {\n    for (let consumerId of this._consumers.keys()) {\n      this.killConsumer(consumerId, value);\n    }\n  }\n\n  killConsumer(consumerId, value) {\n    let consumer = this._consumers.get(consumerId);\n    if (!consumer) {\n      return;\n    }\n    consumer.kill(value);\n  }\n\n  getBackpressure() {\n    let maxBackpressure = 0;\n    for (let consumer of this._consumers.values()) {\n      let backpressure = consumer.getBackpressure();\n      if (backpressure > maxBackpressure) {\n        maxBackpressure = backpressure;\n      }\n    }\n    return maxBackpressure;\n  }\n\n  getConsumerBackpressure(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getBackpressure();\n    }\n    return 0;\n  }\n\n  hasConsumer(consumerId) {\n    return this._consumers.has(consumerId);\n  }\n\n  setConsumer(consumerId, consumer) {\n    this._consumers.set(consumerId, consumer);\n    if (!consumer.currentNode) {\n      consumer.currentNode = this.tailNode;\n    }\n  }\n\n  removeConsumer(consumerId) {\n    let result = this._consumers.delete(consumerId);\n    if (this.removeConsumerCallback) this.removeConsumerCallback(consumerId);\n    return result;\n  }\n\n  getConsumerStats(consumerId) {\n    let consumer = this._consumers.get(consumerId);\n    if (consumer) {\n      return consumer.getStats();\n    }\n    return undefined;\n  }\n\n  getConsumerStatsList() {\n    let consumerStats = [];\n    for (let consumer of this._consumers.values()) {\n      consumerStats.push(consumer.getStats());\n    }\n    return consumerStats;\n  }\n\n  createConsumer(timeout) {\n    return new Consumer(this, this.generateConsumerId(), this.tailNode, timeout);\n  }\n\n  getConsumerList() {\n    return [...this._consumers.values()];\n  }\n\n  getConsumerCount() {\n    return this._consumers.size;\n  }\n}\n\nmodule.exports = WritableConsumableStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}