{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport warning from '../_util/warning';\nimport FloatButtonGroupContext from './context';\nimport Content from './FloatButtonContent';\nimport useStyle from './style';\nexport const floatButtonPrefixCls = 'float-btn';\nconst FloatButton = (props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      type = 'default',\n      shape = 'circle',\n      icon,\n      description,\n      tooltip\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"type\", \"shape\", \"icon\", \"description\", \"tooltip\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const groupShape = useContext(FloatButtonGroupContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeShape = groupShape || shape;\n  const classString = classNames(hashId, prefixCls, className, rootClassName, \"\".concat(prefixCls, \"-\").concat(type), \"\".concat(prefixCls, \"-\").concat(mergeShape), {\n    [\"\".concat(prefixCls, \"-rtl\")]: direction === 'rtl'\n  });\n  const contentProps = useMemo(() => ({\n    prefixCls,\n    description,\n    icon,\n    type\n  }), [prefixCls, description, icon, type]);\n  const buttonNode = /*#__PURE__*/React.createElement(Tooltip, {\n    title: tooltip,\n    placement: direction === 'rtl' ? 'right' : 'left'\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-body\")\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({}, contentProps))));\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(shape === 'circle' && description), 'FloatButton', 'supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.') : void 0;\n  }\n  return wrapSSR(props.href ? /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString\n  }), buttonNode) : /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString,\n    type: \"button\"\n  }), buttonNode));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FloatButton.displayName = 'FloatButton';\n}\nconst ForwardFloatButton = /*#__PURE__*/React.forwardRef(FloatButton);\nexport default ForwardFloatButton;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","React","useContext","useMemo","ConfigContext","Tooltip","warning","FloatButtonGroupContext","Content","useStyle","floatButtonPrefixCls","FloatButton","props","ref","prefixCls","customizePrefixCls","className","rootClassName","type","shape","icon","description","tooltip","restProps","getPrefixCls","direction","groupShape","wrapSSR","hashId","mergeShape","classString","concat","contentProps","buttonNode","createElement","title","placement","assign","process","env","NODE_ENV","href","displayName","ForwardFloatButton","forwardRef"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/node_modules/antd/es/float-button/FloatButton.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport warning from '../_util/warning';\nimport FloatButtonGroupContext from './context';\nimport Content from './FloatButtonContent';\nimport useStyle from './style';\nexport const floatButtonPrefixCls = 'float-btn';\nconst FloatButton = (props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      type = 'default',\n      shape = 'circle',\n      icon,\n      description,\n      tooltip\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"type\", \"shape\", \"icon\", \"description\", \"tooltip\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const groupShape = useContext(FloatButtonGroupContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeShape = groupShape || shape;\n  const classString = classNames(hashId, prefixCls, className, rootClassName, `${prefixCls}-${type}`, `${prefixCls}-${mergeShape}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  });\n  const contentProps = useMemo(() => ({\n    prefixCls,\n    description,\n    icon,\n    type\n  }), [prefixCls, description, icon, type]);\n  const buttonNode = /*#__PURE__*/React.createElement(Tooltip, {\n    title: tooltip,\n    placement: direction === 'rtl' ? 'right' : 'left'\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-body`\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({}, contentProps))));\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(shape === 'circle' && description), 'FloatButton', 'supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.') : void 0;\n  }\n  return wrapSSR(props.href ? /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString\n  }), buttonNode) : /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString,\n    type: \"button\"\n  }), buttonNode));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FloatButton.displayName = 'FloatButton';\n}\nconst ForwardFloatButton = /*#__PURE__*/React.forwardRef(FloatButton);\nexport default ForwardFloatButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}