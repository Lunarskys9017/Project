{"ast":null,"code":"const scErrors = require('sc-errors');\nconst InvalidActionError = scErrors.InvalidActionError;\nfunction AGRequest(socket, id, procedureName, data) {\n  this.socket = socket;\n  this.id = id;\n  this.procedure = procedureName;\n  this.data = data;\n  this.sent = false;\n  this._respond = (responseData, options) => {\n    if (this.sent) {\n      throw new InvalidActionError(`Response to request ${this.id} has already been sent`);\n    }\n    this.sent = true;\n    this.socket.sendObject(responseData, options);\n  };\n  this.end = (data, options) => {\n    let responseData = {\n      rid: this.id\n    };\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n    this._respond(responseData, options);\n  };\n  this.error = (error, options) => {\n    let responseData = {\n      rid: this.id,\n      error: scErrors.dehydrateError(error)\n    };\n    this._respond(responseData, options);\n  };\n}\nmodule.exports = AGRequest;","map":{"version":3,"names":["scErrors","require","InvalidActionError","AGRequest","socket","id","procedureName","data","procedure","sent","_respond","responseData","options","sendObject","end","rid","undefined","error","dehydrateError","module","exports"],"sources":["C:/Users/bryan/Desktop/Projects/my-app/node_modules/ag-request/index.js"],"sourcesContent":["const scErrors = require('sc-errors');\nconst InvalidActionError = scErrors.InvalidActionError;\n\nfunction AGRequest(socket, id, procedureName, data) {\n  this.socket = socket;\n  this.id = id;\n  this.procedure = procedureName;\n  this.data = data;\n  this.sent = false;\n\n  this._respond = (responseData, options) => {\n    if (this.sent) {\n      throw new InvalidActionError(`Response to request ${this.id} has already been sent`);\n    }\n    this.sent = true;\n    this.socket.sendObject(responseData, options);\n  };\n\n  this.end = (data, options) => {\n    let responseData = {\n      rid: this.id\n    };\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n    this._respond(responseData, options);\n  };\n\n  this.error = (error, options) => {\n    let responseData = {\n      rid: this.id,\n      error: scErrors.dehydrateError(error)\n    };\n    this._respond(responseData, options);\n  };\n}\n\nmodule.exports = AGRequest;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,kBAAkB,GAAGF,QAAQ,CAACE,kBAAkB;AAEtD,SAASC,SAASA,CAACC,MAAM,EAAEC,EAAE,EAAEC,aAAa,EAAEC,IAAI,EAAE;EAClD,IAAI,CAACH,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACG,SAAS,GAAGF,aAAa;EAC9B,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACE,IAAI,GAAG,KAAK;EAEjB,IAAI,CAACC,QAAQ,GAAG,CAACC,YAAY,EAAEC,OAAO,KAAK;IACzC,IAAI,IAAI,CAACH,IAAI,EAAE;MACb,MAAM,IAAIP,kBAAkB,CAAE,uBAAsB,IAAI,CAACG,EAAG,wBAAuB,CAAC;IACtF;IACA,IAAI,CAACI,IAAI,GAAG,IAAI;IAChB,IAAI,CAACL,MAAM,CAACS,UAAU,CAACF,YAAY,EAAEC,OAAO,CAAC;EAC/C,CAAC;EAED,IAAI,CAACE,GAAG,GAAG,CAACP,IAAI,EAAEK,OAAO,KAAK;IAC5B,IAAID,YAAY,GAAG;MACjBI,GAAG,EAAE,IAAI,CAACV;IACZ,CAAC;IACD,IAAIE,IAAI,KAAKS,SAAS,EAAE;MACtBL,YAAY,CAACJ,IAAI,GAAGA,IAAI;IAC1B;IACA,IAAI,CAACG,QAAQ,CAACC,YAAY,EAAEC,OAAO,CAAC;EACtC,CAAC;EAED,IAAI,CAACK,KAAK,GAAG,CAACA,KAAK,EAAEL,OAAO,KAAK;IAC/B,IAAID,YAAY,GAAG;MACjBI,GAAG,EAAE,IAAI,CAACV,EAAE;MACZY,KAAK,EAAEjB,QAAQ,CAACkB,cAAc,CAACD,KAAK;IACtC,CAAC;IACD,IAAI,CAACP,QAAQ,CAACC,YAAY,EAAEC,OAAO,CAAC;EACtC,CAAC;AACH;AAEAO,MAAM,CAACC,OAAO,GAAGjB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}