{"ast":null,"code":"import{useEffect,useState,Suspense}from\"react\";import{CurrentScreen}from\"./CurrentScreen\";import{Loading}from\"components/Loading\";import{getCurrentWindow}from\"lib/overwolf-essentials\";import\"../shared/root.css\";import{log}from\"lib/log\";//This is the main component of the app, it is the root of the app\n//each Page component is rendered in a different window\n//if NODE_ENV is set to development, the app will render in a window named 'dev'\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const App=()=>{const[screenName,setScreenName]=useState(\"\");useEffect(()=>{(async function preLoad(){const currentWindow=await getCurrentWindow();setScreenName(currentWindow);log(\"Request screen: \".concat(currentWindow),\"src/app/components/App.tsx\",\"useEffect\");})();},[]);//this is fallback for the loading current screen\nreturn/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(Loading,{}),children:/*#__PURE__*/_jsx(CurrentScreen,{name:screenName})});};","map":{"version":3,"names":["useEffect","useState","Suspense","CurrentScreen","Loading","getCurrentWindow","log","jsx","_jsx","App","screenName","setScreenName","preLoad","currentWindow","concat","fallback","children","name"],"sources":["C:/Users/bryan/Desktop/Mob/Projects Backup/Projects/my-app/src/app/components/App.tsx"],"sourcesContent":["import { useEffect, useState, Suspense } from \"react\";\nimport { CurrentScreen } from \"./CurrentScreen\";\nimport { Loading } from \"components/Loading\";\nimport { getCurrentWindow } from \"lib/overwolf-essentials\";\nimport \"../shared/root.css\";\nimport { log } from \"lib/log\";\n\n//This is the main component of the app, it is the root of the app\n//each Page component is rendered in a different window\n//if NODE_ENV is set to development, the app will render in a window named 'dev'\nexport const App = () => {\n  const [screenName, setScreenName] = useState<string>(\"\");\n\n  useEffect(() => {\n    (async function preLoad() {\n      const currentWindow = await getCurrentWindow();\n      setScreenName(currentWindow);\n      log(\n        `Request screen: ${currentWindow}`,\n        \"src/app/components/App.tsx\",\n        \"useEffect\",\n      );\n    })();\n  }, []);\n  //this is fallback for the loading current screen\n  return (\n    <Suspense fallback={<Loading />}>\n      <CurrentScreen name={screenName} />\n    </Suspense>\n  );\n};\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,CAAEC,QAAQ,KAAQ,OAAO,CACrD,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,OAASC,OAAO,KAAQ,oBAAoB,CAC5C,OAASC,gBAAgB,KAAQ,yBAAyB,CAC1D,MAAO,oBAAoB,CAC3B,OAASC,GAAG,KAAQ,SAAS,CAE7B;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAS,EAAE,CAAC,CAExDD,SAAS,CAAC,IAAM,CACd,CAAC,cAAe,CAAAY,OAAOA,CAAA,CAAG,CACxB,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAR,gBAAgB,CAAC,CAAC,CAC9CM,aAAa,CAACE,aAAa,CAAC,CAC5BP,GAAG,oBAAAQ,MAAA,CACkBD,aAAa,EAChC,4BAA4B,CAC5B,WACF,CAAC,CACH,CAAC,EAAE,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CACN;AACA,mBACEL,IAAA,CAACN,QAAQ,EAACa,QAAQ,cAAEP,IAAA,CAACJ,OAAO,GAAE,CAAE,CAAAY,QAAA,cAC9BR,IAAA,CAACL,aAAa,EAACc,IAAI,CAAEP,UAAW,CAAE,CAAC,CAC3B,CAAC,CAEf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}