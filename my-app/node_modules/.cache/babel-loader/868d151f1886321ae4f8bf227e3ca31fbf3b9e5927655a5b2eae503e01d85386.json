{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport capitalize from '../../_util/capitalize';\nimport { genPresetColor, resetComponent } from '../../style';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [\"\".concat(token.componentCls, \"-\").concat(status)]: {\n      color: token[\"color\".concat(cssVariableType)],\n      background: token[\"color\".concat(capitalizedCssVariableType, \"Bg\")],\n      borderColor: token[\"color\".concat(capitalizedCssVariableType, \"Border\")]\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [\"\".concat(token.componentCls, \"-\").concat(colorKey)]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: \"\".concat(token.tagLineHeight, \"px\"),\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorder),\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: \"all \".concat(token.motionDurationMid),\n      textAlign: 'start',\n      // RTL\n      [\"&\".concat(componentCls, \"-rtl\")]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [\"\".concat(componentCls, \"-close-icon\")]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: \"all \".concat(token.motionDurationMid),\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [\"&\".concat(componentCls, \"-has-color\")]: {\n        borderColor: 'transparent',\n        [\"&, a, a:hover, \".concat(token.iconCls, \"-close, \").concat(token.iconCls, \"-close:hover\")]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [\"&-checkable\"]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [\"&:not(\".concat(componentCls, \"-checkable-checked):hover\")]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [\"&-hidden\"]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [\"> \".concat(token.iconCls, \" + span, > span + \").concat(token.iconCls)]: {\n        marginInlineStart: paddingInline\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillAlter;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8 // Fixed padding.\n  });\n\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});","map":{"version":3,"names":["genComponentStyleHook","mergeToken","capitalize","genPresetColor","resetComponent","genTagStatusStyle","token","status","cssVariableType","capitalizedCssVariableType","concat","componentCls","color","background","borderColor","genPresetStyle","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","iconMarginInline","Object","assign","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","tagDefaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","direction","tagDefaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","fontSizeIcon","tagHeight","Math","round","fontSizeSM","colorFillAlter","colorText","tagToken"],"sources":["C:/Users/bryan/Desktop/Mob/Projects Backup/Projects/my-app/node_modules/antd/es/tag/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport capitalize from '../../_util/capitalize';\nimport { genPresetColor, resetComponent } from '../../style';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`]\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: `${token.tagLineHeight}px`,\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillAlter;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8 // Fixed padding.\n  });\n\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,UAAU,QAAQ,sBAAsB;AACxE,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,eAAe,KAAK;EAC5D,MAAMC,0BAA0B,GAAGP,UAAU,CAACM,eAAe,CAAC;EAC9D,OAAO;IACL,IAAAE,MAAA,CAAIJ,KAAK,CAACK,YAAY,OAAAD,MAAA,CAAIH,MAAM,IAAK;MACnCK,KAAK,EAAEN,KAAK,SAAAI,MAAA,CAASF,eAAe,EAAG;MACvCK,UAAU,EAAEP,KAAK,SAAAI,MAAA,CAASD,0BAA0B,QAAK;MACzDK,WAAW,EAAER,KAAK,SAAAI,MAAA,CAASD,0BAA0B;IACvD;EACF,CAAC;AACH,CAAC;AACD,MAAMM,cAAc,GAAGT,KAAK,IAAIH,cAAc,CAACG,KAAK,EAAE,CAACU,QAAQ,EAAEC,IAAI,KAAK;EACxE,IAAI;IACFC,SAAS;IACTC,gBAAgB;IAChBC,UAAU;IACVC;EACF,CAAC,GAAGJ,IAAI;EACR,OAAO;IACL,IAAAP,MAAA,CAAIJ,KAAK,CAACK,YAAY,OAAAD,MAAA,CAAIM,QAAQ,IAAK;MACrCJ,KAAK,EAAEM,SAAS;MAChBL,UAAU,EAAEO,UAAU;MACtBN,WAAW,EAAEK,gBAAgB;MAC7B;MACA,WAAW,EAAE;QACXP,KAAK,EAAEN,KAAK,CAACgB,mBAAmB;QAChCT,UAAU,EAAEQ,SAAS;QACrBP,WAAW,EAAEO;MACf;IACF;EACF,CAAC;AACH,CAAC,CAAC;AACF,MAAME,YAAY,GAAGjB,KAAK,IAAI;EAC5B,MAAM;IACJkB,UAAU;IACVC,SAAS;IACTC,oBAAoB;IACpBf;EACF,CAAC,GAAGL,KAAK;EACT,MAAMqB,aAAa,GAAGD,oBAAoB,GAAGD,SAAS;EACtD,MAAMG,gBAAgB,GAAGJ,UAAU,GAAGC,SAAS;EAC/C,OAAO;IACL;IACA,CAACd,YAAY,GAAGkB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE1B,cAAc,CAACE,KAAK,CAAC,CAAC,EAAE;MACtEyB,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE3B,KAAK,CAAC4B,QAAQ;MAC/BP,aAAa;MACbQ,QAAQ,EAAE7B,KAAK,CAAC8B,WAAW;MAC3BC,UAAU,KAAA3B,MAAA,CAAKJ,KAAK,CAACgC,aAAa,OAAI;MACtCC,UAAU,EAAE,QAAQ;MACpB1B,UAAU,EAAEP,KAAK,CAACkC,YAAY;MAC9BC,MAAM,KAAA/B,MAAA,CAAKJ,KAAK,CAACmB,SAAS,SAAAf,MAAA,CAAMJ,KAAK,CAACoC,QAAQ,OAAAhC,MAAA,CAAIJ,KAAK,CAACqC,WAAW,CAAE;MACrEC,YAAY,EAAEtC,KAAK,CAACuC,cAAc;MAClCC,OAAO,EAAE,CAAC;MACVC,UAAU,SAAArC,MAAA,CAASJ,KAAK,CAAC0C,iBAAiB,CAAE;MAC5CC,SAAS,EAAE,OAAO;MAClB;MACA,KAAAvC,MAAA,CAAKC,YAAY,YAAS;QACxBuC,SAAS,EAAE;MACb,CAAC;MACD,eAAe,EAAE;QACftC,KAAK,EAAEN,KAAK,CAAC6C;MACf,CAAC;MACD,IAAAzC,MAAA,CAAIC,YAAY,mBAAgB;QAC9ByC,iBAAiB,EAAExB,gBAAgB;QACnChB,KAAK,EAAEN,KAAK,CAAC+C,oBAAoB;QACjClB,QAAQ,EAAE7B,KAAK,CAACgD,WAAW;QAC3BC,MAAM,EAAE,SAAS;QACjBR,UAAU,SAAArC,MAAA,CAASJ,KAAK,CAAC0C,iBAAiB,CAAE;QAC5C,SAAS,EAAE;UACTpC,KAAK,EAAEN,KAAK,CAACkD;QACf;MACF,CAAC;MACD,KAAA9C,MAAA,CAAKC,YAAY,kBAAe;QAC9BG,WAAW,EAAE,aAAa;QAC1B,mBAAAJ,MAAA,CAAmBJ,KAAK,CAACmD,OAAO,cAAA/C,MAAA,CAAWJ,KAAK,CAACmD,OAAO,oBAAiB;UACvE7C,KAAK,EAAEN,KAAK,CAACgB;QACf;MACF,CAAC;MACD,iBAAiB;QACfoC,eAAe,EAAE,aAAa;QAC9B5C,WAAW,EAAE,aAAa;QAC1ByC,MAAM,EAAE,SAAS;QACjB,UAAA7C,MAAA,CAAUC,YAAY,iCAA8B;UAClDC,KAAK,EAAEN,KAAK,CAACqD,YAAY;UACzBD,eAAe,EAAEpD,KAAK,CAACsD;QACzB,CAAC;QACD,qBAAqB,EAAE;UACrBhD,KAAK,EAAEN,KAAK,CAACgB;QACf,CAAC;QACD,WAAW,EAAE;UACXoC,eAAe,EAAEpD,KAAK,CAACqD,YAAY;UACnC,SAAS,EAAE;YACTD,eAAe,EAAEpD,KAAK,CAACuD;UACzB;QACF,CAAC;QACD,UAAU,EAAE;UACVH,eAAe,EAAEpD,KAAK,CAACwD;QACzB;MACF,CAAC;MACD,cAAc;QACZ/B,OAAO,EAAE;MACX,CAAC;MACD;MACA,MAAArB,MAAA,CAAMJ,KAAK,CAACmD,OAAO,wBAAA/C,MAAA,CAAqBJ,KAAK,CAACmD,OAAO,IAAK;QACxDL,iBAAiB,EAAEzB;MACrB;IACF,CAAC;EACH,CAAC;AACH,CAAC;AACD;AACA,eAAe3B,qBAAqB,CAAC,KAAK,EAAEM,KAAK,IAAI;EACnD,MAAM;IACJ6B,QAAQ;IACRE,UAAU;IACVZ,SAAS;IACTsC;EACF,CAAC,GAAGzD,KAAK;EACT,MAAM0D,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC/B,QAAQ,GAAGE,UAAU,CAAC;EACnD,MAAMD,WAAW,GAAG9B,KAAK,CAAC6D,UAAU;EACpC,MAAM7B,aAAa,GAAG0B,SAAS,GAAGvC,SAAS,GAAG,CAAC;EAC/C,MAAMe,YAAY,GAAGlC,KAAK,CAAC8D,cAAc;EACzC,MAAMjB,eAAe,GAAG7C,KAAK,CAAC+D,SAAS;EACvC,MAAMC,QAAQ,GAAGrE,UAAU,CAACK,KAAK,EAAE;IACjC8B,WAAW;IACXE,aAAa;IACbE,YAAY;IACZW,eAAe;IACfG,WAAW,EAAES,YAAY,GAAG,CAAC,GAAGtC,SAAS;IACzCC,oBAAoB,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC;;EAEF,OAAO,CAACH,YAAY,CAAC+C,QAAQ,CAAC,EAAEvD,cAAc,CAACuD,QAAQ,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,YAAY,EAAE,MAAM,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACnQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}